//
// Created by Devin on 2021/1/21.
//


#include <iostream>

/**
 * 初始化不是赋值，初始化的含义是创建变量时赋予一个初始值，而赋值是把变量当前的值擦除，用新值来代替。
 * 变量的声明和定义：
 *    声明规定了变量的名字和类型，定义除此之外，还申请存储空间，也可能会赋初始值。
 *    声明变量：如果想声明一个变量而不是定义，使用关键字`extern`，并且不要显示的初始化。`extern int i;`
 *    定义变量：任何显示的初始化声明的变量即成了定义。 `int j;` 声明并定义
 *    `extern`语句如果包含了初始值就不再是声明，而变成了定义。
 */
int main(void) {
    int sum = 0, value;
    // string 是标准库中的类型，也是在命名空间`std`中定义的
    // 通过string初始化book，C++中提供了几种初始化字符串的方式
    // 其中一种是将字面值拷贝给string对象
    std::string book("2021-02-02 14:35:35");
    std::cout << book;

    /**
     * C++中初始化变量的4中方式
     * `{}`初始化形式称为列表初始化，当用于内置类型变量时，如果我们使用列表初始化且初始值存在丢失信息的风险，则编译器将报错
     * int units_old = 0;
     * int units_old = {0};
     * int units_old{0};
     * int units_old(0);
     */
     long double ld = 3.1415926536;
     // int a{ld}, b = {ld}; // 错误，转换未执行，因为存在丢失信息的风险
     // int a(ld), b = ld;  // 正确，转换执行，且丢失了部分值
    return 0;
}